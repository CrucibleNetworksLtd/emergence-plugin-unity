name: Build and Deploy Unity Package

on:
  workflow_dispatch: #Manual trigger

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository containing Unity project
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Run Unit Tests
      - name: Run Unit Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: Assets/EmergenceSDK
          unityVersion: 2021.3.11f1
          packageMode: true
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Step 1: Check out the repository containing Unity project
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Get the latest commit message
      - name: Get Latest Commit Message
        run: echo "LATEST_COMMIT_MSG=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      # Step 3: Rename Samples Folder
      - name: Rename Samples Folder
        run: |
          mv Assets/EmergenceSDK/Samples Assets/EmergenceSDK/Samples~

      # Step 4: Checkout Distro repo
      - name: Checkout Distribution Repository
        uses: actions/checkout@v2
        with:
          repository: CrucibleNetworksLtd/EmergenceSDKUnity
          ref: master
          token: ${{ secrets.DISTRO_TOKEN }}
          path: distribution-repo

      # Step 5: Copy package to Distro Repo
      - name: Copy Package to Distribution Repository
        run: |
          rsync -av --progress Assets/EmergenceSDK/ distribution-repo/

      # Step 6: Publish Package
      - name: Commit and Push Package
        run: |
          cd distribution-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "${{ env.LATEST_COMMIT_MSG }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.DISTRO_TOKEN }}
